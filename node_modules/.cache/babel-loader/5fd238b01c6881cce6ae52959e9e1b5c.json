{"ast":null,"code":"import _objectSpread from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/minmin/Documents/TuongTacMayTinh-Client/src/components/filters/language-filter/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GithubColors from 'github-colors';\nimport './styles.css';\nimport languages from './languages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nvar LanguageFilter = /*#__PURE__*/function (_React$Component) {\n  _inherits(LanguageFilter, _React$Component);\n\n  var _super = _createSuper(LanguageFilter);\n\n  function LanguageFilter() {\n    var _this;\n\n    _classCallCheck(this, LanguageFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.filterInputRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      filterText: '',\n      selectedIndex: 0,\n      showDropdown: false\n    };\n\n    _this.focusFilterInput = function () {\n      _this.filterInputRef.current.focus();\n    };\n\n    _this.onKeyDown = function (e) {\n      var selectedIndex = _this.state.selectedIndex;\n      var isEnterKey = e.keyCode === 13;\n      var isUpKey = e.keyCode === 38;\n      var isDownKey = e.keyCode === 40;\n\n      if (!isUpKey && !isDownKey && !isEnterKey) {\n        return;\n      }\n\n      var filteredLanguages = _this.getFilteredLanguages();\n\n      e.preventDefault(); // arrow up/down button should select next/previous list element\n\n      if (isUpKey && selectedIndex > 0) {\n        _this.setState(function (prevState) {\n          return {\n            selectedIndex: prevState.selectedIndex - 1\n          };\n        });\n      } else if (isDownKey && selectedIndex < filteredLanguages.length - 1) {\n        _this.setState(function (prevState) {\n          return {\n            selectedIndex: prevState.selectedIndex + 1\n          };\n        });\n      } else if (isEnterKey && filteredLanguages[selectedIndex]) {\n        _this.selectLanguage(selectedIndex);\n      }\n    };\n\n    _this.selectLanguage = function (selectedIndex) {\n      var filteredLanguages = _this.getFilteredLanguages();\n\n      var selectedLanguage = filteredLanguages[selectedIndex];\n\n      if (!selectedLanguage) {\n        return;\n      }\n\n      _this.setState({\n        filterText: '',\n        showDropdown: false\n      });\n\n      _this.props.updateLanguage(selectedLanguage.value);\n    };\n\n    _this.hideDropdown = function () {\n      _this.setState({\n        showDropdown: false,\n        filterText: ''\n      });\n    };\n\n    _this.filterLanguages = function (e) {\n      _this.setState({\n        filterText: e.target.value,\n        selectedIndex: 0 // Reset and select the first language\n\n      });\n    };\n\n    _this.toggleDropdown = function () {\n      _this.setState(function (prevState) {\n        return {\n          showDropdown: !prevState.showDropdown\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LanguageFilter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // only scroll into view if the active item changed since last render\n      if (prevState.selectedIndex !== this.state.selectedIndex) {\n        this.ensureSelectedVisible();\n      } // If the dropdown has just been made visible focus the input\n\n\n      if (this.state.showDropdown && !prevState.showDropdown) {\n        this.focusFilterInput();\n      }\n    }\n  }, {\n    key: \"ensureSelectedVisible\",\n    value: function ensureSelectedVisible() {\n      var itemComponent = this.refs.activeItem;\n\n      if (!itemComponent) {\n        return;\n      }\n\n      var domNode = ReactDOM.findDOMNode(itemComponent);\n\n      if (!domNode) {\n        return;\n      }\n\n      domNode.scrollIntoView({\n        block: 'end'\n      });\n    }\n  }, {\n    key: \"getFilteredLanguages\",\n    value: function getFilteredLanguages() {\n      var _this2 = this;\n\n      var availableLanguages = _toConsumableArray(languages);\n\n      if (this.state.filterText) {\n        availableLanguages = availableLanguages.filter(function (language) {\n          var languageText = language.title.toLowerCase();\n\n          var selectedText = _this2.state.filterText.toLowerCase();\n\n          return languageText.indexOf(selectedText) >= 0;\n        });\n      }\n\n      return availableLanguages;\n    }\n  }, {\n    key: \"renderLanguages\",\n    value: function renderLanguages() {\n      var _this3 = this;\n\n      var availableLanguages = this.getFilteredLanguages();\n      return availableLanguages.map(function (language, counter) {\n        var isSelectedIndex = counter === _this3.state.selectedIndex; // This will be used in making sure of the element visibility\n\n        var refProp = isSelectedIndex ? {\n          ref: 'activeItem'\n        } : {};\n        var languageColor = GithubColors.get(language.title) || {\n          color: language.title === 'All Languages' ? 'transparent' : '#e8e8e8'\n        };\n        return /*#__PURE__*/_createElement(\"a\", _objectSpread(_objectSpread({\n          className: classNames('select-menu-item', {\n            'active-item': isSelectedIndex\n          })\n        }, refProp), {}, {\n          onMouseDown: function onMouseDown() {\n            return _this3.selectLanguage(counter);\n          },\n          key: counter,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"repo-language-color\",\n          style: {\n            backgroundColor: languageColor.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this3), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"select-menu-item-text\",\n          children: language.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this3));\n      });\n    }\n  }, {\n    key: \"getLanguageDropdown\",\n    value: function getLanguageDropdown() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-menu-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"select-menu-title\",\n            children: \"Search Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-menu-filters\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-menu-text-filter\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Filter Languages\",\n              ref: this.filterInputRef,\n              onBlur: this.hideDropdown,\n              onChange: this.filterLanguages,\n              onKeyDown: this.onKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-menu-list\",\n          children: this.renderLanguages()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-filter-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleDropdown,\n          className: \"btn btn-light language-filter shadowed\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-filter mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this), this.props.selectedLanguage || 'All Languages']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), this.state.showDropdown && this.getLanguageDropdown()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return LanguageFilter;\n}(React.Component);\n\nLanguageFilter.propTypes = {\n  updateLanguage: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string\n};\nexport default LanguageFilter;","map":{"version":3,"sources":["/Users/minmin/Documents/TuongTacMayTinh-Client/src/components/filters/language-filter/index.js"],"names":["React","ReactDOM","PropTypes","classNames","GithubColors","languages","LanguageFilter","filterInputRef","createRef","state","filterText","selectedIndex","showDropdown","focusFilterInput","current","focus","onKeyDown","e","isEnterKey","keyCode","isUpKey","isDownKey","filteredLanguages","getFilteredLanguages","preventDefault","setState","prevState","length","selectLanguage","selectedLanguage","props","updateLanguage","value","hideDropdown","filterLanguages","target","toggleDropdown","prevProps","ensureSelectedVisible","itemComponent","refs","activeItem","domNode","findDOMNode","scrollIntoView","block","availableLanguages","filter","language","languageText","title","toLowerCase","selectedText","indexOf","map","counter","isSelectedIndex","refProp","ref","languageColor","get","color","backgroundColor","renderLanguages","getLanguageDropdown","Component","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GithubColors from 'github-colors';\n\nimport './styles.css';\nimport languages from './languages';\n\nclass LanguageFilter extends React.Component {\n  filterInputRef = React.createRef();\n\n  state = {\n    filterText: '',\n    selectedIndex: 0,\n    showDropdown: false,\n  };\n\n  focusFilterInput = () => {\n    this.filterInputRef.current.focus();\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // only scroll into view if the active item changed since last render\n    if (prevState.selectedIndex !== this.state.selectedIndex) {\n      this.ensureSelectedVisible();\n    }\n\n    // If the dropdown has just been made visible focus the input\n    if (this.state.showDropdown && !prevState.showDropdown) {\n      this.focusFilterInput();\n    }\n  }\n\n  ensureSelectedVisible() {\n    const itemComponent = this.refs.activeItem;\n    if (!itemComponent) {\n      return;\n    }\n\n    const domNode = ReactDOM.findDOMNode(itemComponent);\n    if (!domNode) {\n      return;\n    }\n\n    domNode.scrollIntoView({ block: 'end' });\n  }\n\n  getFilteredLanguages() {\n    let availableLanguages = [...languages];\n\n    if (this.state.filterText) {\n      availableLanguages = availableLanguages.filter((language) => {\n        const languageText = language.title.toLowerCase();\n        const selectedText = this.state.filterText.toLowerCase();\n\n        return languageText.indexOf(selectedText) >= 0;\n      });\n    }\n\n    return availableLanguages;\n  }\n\n  renderLanguages() {\n    let availableLanguages = this.getFilteredLanguages();\n\n    return availableLanguages.map((language, counter) => {\n      const isSelectedIndex = counter === this.state.selectedIndex;\n\n      // This will be used in making sure of the element visibility\n      const refProp = isSelectedIndex ? { ref: 'activeItem' } : {};\n      const languageColor = GithubColors.get(language.title) || {\n        color: language.title === 'All Languages' ? 'transparent' : '#e8e8e8',\n      };\n\n      return (\n        <a\n          className={classNames('select-menu-item', {\n            'active-item': isSelectedIndex,\n          })}\n          {...refProp}\n          onMouseDown={() => this.selectLanguage(counter)}\n          key={counter}\n        >\n          <span\n            className=\"repo-language-color\"\n            style={{\n              backgroundColor: languageColor.color,\n            }}\n          ></span>\n          <span className=\"select-menu-item-text\">{language.title}</span>\n        </a>\n      );\n    });\n  }\n\n  onKeyDown = (e) => {\n    const { selectedIndex } = this.state;\n\n    const isEnterKey = e.keyCode === 13;\n    const isUpKey = e.keyCode === 38;\n    const isDownKey = e.keyCode === 40;\n\n    if (!isUpKey && !isDownKey && !isEnterKey) {\n      return;\n    }\n\n    const filteredLanguages = this.getFilteredLanguages();\n    e.preventDefault();\n\n    // arrow up/down button should select next/previous list element\n    if (isUpKey && selectedIndex > 0) {\n      this.setState((prevState) => ({\n        selectedIndex: prevState.selectedIndex - 1,\n      }));\n    } else if (isDownKey && selectedIndex < filteredLanguages.length - 1) {\n      this.setState((prevState) => ({\n        selectedIndex: prevState.selectedIndex + 1,\n      }));\n    } else if (isEnterKey && filteredLanguages[selectedIndex]) {\n      this.selectLanguage(selectedIndex);\n    }\n  };\n\n  selectLanguage = (selectedIndex) => {\n    const filteredLanguages = this.getFilteredLanguages();\n    const selectedLanguage = filteredLanguages[selectedIndex];\n    if (!selectedLanguage) {\n      return;\n    }\n\n    this.setState({\n      filterText: '',\n      showDropdown: false,\n    });\n\n    this.props.updateLanguage(selectedLanguage.value);\n  };\n\n  hideDropdown = () => {\n    this.setState({\n      showDropdown: false,\n      filterText: '',\n    });\n  };\n\n  filterLanguages = (e) => {\n    this.setState({\n      filterText: e.target.value,\n      selectedIndex: 0, // Reset and select the first language\n    });\n  };\n\n  getLanguageDropdown() {\n    return (\n      <div className=\"language-select\">\n        <div className=\"select-menu-header\">\n          <span className=\"select-menu-title\">Search Language</span>\n        </div>\n        <div className=\"select-menu-filters\">\n          <div className=\"select-menu-text-filter\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Filter Languages\"\n              ref={this.filterInputRef}\n              onBlur={this.hideDropdown}\n              onChange={this.filterLanguages}\n              onKeyDown={this.onKeyDown}\n            />\n          </div>\n        </div>\n        <div className=\"select-menu-list\">{this.renderLanguages()}</div>\n      </div>\n    );\n  }\n\n  toggleDropdown = () => {\n    this.setState((prevState) => ({\n      showDropdown: !prevState.showDropdown,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"language-filter-wrap\">\n        <button\n          onClick={this.toggleDropdown}\n          className=\"btn btn-light language-filter shadowed\"\n        >\n          <i className=\"fa fa-filter mr-2\"></i>\n          {this.props.selectedLanguage || 'All Languages'}\n        </button>\n        {this.state.showDropdown && this.getLanguageDropdown()}\n      </div>\n    );\n  }\n}\n\nLanguageFilter.propTypes = {\n  updateLanguage: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string,\n};\n\nexport default LanguageFilter;\n"]},"metadata":{},"sourceType":"module"}