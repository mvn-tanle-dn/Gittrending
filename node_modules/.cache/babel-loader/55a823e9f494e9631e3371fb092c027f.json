{"ast":null,"code":"import _classCallCheck from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/minmin/Documents/TuongTacMayTinh-Client/src/components/repository-list/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport ListItem from './list-item';\nimport GroupHeading from '@components/group-heading';\nimport RepositoryGrid from '@components/repository-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RepositoryList = /*#__PURE__*/function (_React$Component) {\n  _inherits(RepositoryList, _React$Component);\n\n  var _super = _createSuper(RepositoryList);\n\n  function RepositoryList() {\n    _classCallCheck(this, RepositoryList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RepositoryList, [{\n    key: \"renderGroup\",\n    value: function renderGroup(repositoryGroup, counter) {\n      var _this = this;\n\n      var groupHeading = ''; // for the first repository group, we have the\n      // heading among the filters out of the grid\n\n      if (counter !== 0) {\n        groupHeading = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row row-group\",\n          children: /*#__PURE__*/_jsxDEV(GroupHeading, {\n            start: repositoryGroup.start,\n            end: repositoryGroup.end,\n            dateJump: this.props.dateJump\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this);\n      }\n\n      var groupKey = \"\".concat(repositoryGroup.start, \"_\").concat(repositoryGroup.end, \"_\").concat(counter);\n      var repositories = repositoryGroup.data.items;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-group-key\": groupKey,\n        children: [groupHeading, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row list-container\",\n          children: repositories.map(function (repository) {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              repository: repository\n            }, repository.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, groupKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repositories-list\",\n        children: this.props.repositories.map(function (repositoryGroup, counter) {\n          return _this2.renderGroup(repositoryGroup, counter);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return RepositoryList;\n}(React.Component);\n\nRepositoryGrid.propTypes = {\n  repositories: PropTypes.array.isRequired,\n  dateJump: PropTypes.string.isRequired\n};\nexport default RepositoryList;","map":{"version":3,"sources":["/Users/minmin/Documents/TuongTacMayTinh-Client/src/components/repository-list/index.js"],"names":["React","PropTypes","ListItem","GroupHeading","RepositoryGrid","RepositoryList","repositoryGroup","counter","groupHeading","start","end","props","dateJump","groupKey","repositories","data","items","map","repository","id","renderGroup","Component","propTypes","array","isRequired","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;IAEMC,c;;;;;;;;;;;;;WACJ,qBAAYC,eAAZ,EAA6BC,OAA7B,EAAsC;AAAA;;AACpC,UAAIC,YAAY,GAAG,EAAnB,CADoC,CAEpC;AACA;;AACA,UAAID,OAAO,KAAK,CAAhB,EAAmB;AACjBC,QAAAA,YAAY,gBACV;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE,QAAC,YAAD;AACE,YAAA,KAAK,EAAEF,eAAe,CAACG,KADzB;AAEE,YAAA,GAAG,EAAEH,eAAe,CAACI,GAFvB;AAGE,YAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;;AAED,UAAMC,QAAQ,aAAMP,eAAe,CAACG,KAAtB,cAA+BH,eAAe,CAACI,GAA/C,cAAsDH,OAAtD,CAAd;AACA,UAAMO,YAAY,GAAGR,eAAe,CAACS,IAAhB,CAAqBC,KAA1C;AAEA,0BACE;AAAoB,0BAAgBH,QAApC;AAAA,mBACGL,YADH,eAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACGM,YAAY,CAACG,GAAb,CAAiB,UAACC,UAAD;AAAA,gCAChB,QAAC,QAAD;AAAU,cAAA,UAAU,EAAEA;AAAtB,eAAuCA,UAAU,CAACC,EAAlD;AAAA;AAAA;AAAA;AAAA,qBADgB;AAAA,WAAjB;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;;WAED,kBAAS;AAAA;;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACG,KAAKF,KAAL,CAAWG,YAAX,CAAwBG,GAAxB,CAA4B,UAACX,eAAD,EAAkBC,OAAlB,EAA8B;AACzD,iBAAO,MAAI,CAACa,WAAL,CAAiBd,eAAjB,EAAkCC,OAAlC,CAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;;;EAxC0BP,KAAK,CAACqB,S;;AA2CnCjB,cAAc,CAACkB,SAAf,GAA2B;AACzBR,EAAAA,YAAY,EAAEb,SAAS,CAACsB,KAAV,CAAgBC,UADL;AAEzBZ,EAAAA,QAAQ,EAAEX,SAAS,CAACwB,MAAV,CAAiBD;AAFF,CAA3B;AAKA,eAAenB,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\nimport ListItem from './list-item';\nimport GroupHeading from '@components/group-heading';\nimport RepositoryGrid from '@components/repository-grid';\n\nclass RepositoryList extends React.Component {\n  renderGroup(repositoryGroup, counter) {\n    let groupHeading = '';\n    // for the first repository group, we have the\n    // heading among the filters out of the grid\n    if (counter !== 0) {\n      groupHeading = (\n        <div className=\"row row-group\">\n          <GroupHeading\n            start={repositoryGroup.start}\n            end={repositoryGroup.end}\n            dateJump={this.props.dateJump}\n          />\n        </div>\n      );\n    }\n\n    const groupKey = `${repositoryGroup.start}_${repositoryGroup.end}_${counter}`;\n    const repositories = repositoryGroup.data.items;\n\n    return (\n      <div key={groupKey} data-group-key={groupKey}>\n        {groupHeading}\n        <div className=\"row list-container\">\n          {repositories.map((repository) => (\n            <ListItem repository={repository} key={repository.id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"repositories-list\">\n        {this.props.repositories.map((repositoryGroup, counter) => {\n          return this.renderGroup(repositoryGroup, counter);\n        })}\n      </div>\n    );\n  }\n}\n\nRepositoryGrid.propTypes = {\n  repositories: PropTypes.array.isRequired,\n  dateJump: PropTypes.string.isRequired,\n};\n\nexport default RepositoryList;\n"]},"metadata":{},"sourceType":"module"}