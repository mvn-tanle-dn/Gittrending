{"ast":null,"code":"import _classCallCheck from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/minmin/Documents/TuongTacMayTinh-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/minmin/Documents/TuongTacMayTinh-Client/src/components/group-heading/index.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar GroupHeading = /*#__PURE__*/function (_React$Component) {\n  _inherits(GroupHeading, _React$Component);\n\n  var _super = _createSuper(GroupHeading);\n\n  function GroupHeading() {\n    _classCallCheck(this, GroupHeading);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GroupHeading, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      var startMoment = moment(this.props.start);\n      var currentMoment = moment();\n      var yesterdayMoment = moment().subtract(1, 'day'); // For \"day\" jumps return the day name\n\n      if (this.props.dateJump === 'day') {\n        if (startMoment.isSame(currentMoment, 'day')) {\n          return 'Today';\n        } else if (startMoment.isSame(yesterdayMoment, 'day')) {\n          return 'Yesterday';\n        }\n\n        return startMoment.format('dddd');\n      } // Return the relative date\n\n\n      var formattedDate = startMoment.fromNow();\n\n      if (formattedDate === 'a year ago') {\n        return 'Last year';\n      } else if (formattedDate === '7 days ago') {\n        return 'This week';\n      } else if (formattedDate === '14 days ago') {\n        return 'Last week';\n      }\n\n      return formattedDate;\n    }\n  }, {\n    key: \"getSubtitle\",\n    value: function getSubtitle() {\n      var startMoment = moment(this.props.start);\n      var endMoment = moment(this.props.end);\n\n      if (startMoment.isSame(endMoment, 'day') || this.props.dateJump === 'day') {\n        return startMoment.format('MMMM D, YYYY');\n      }\n\n      return startMoment.format('MMMM D, YYYY') + ' – ' + endMoment.format('MMMM D, YYYY');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-capitalizes\",\n            children: this.getTitle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"small text-muted ml-2\",\n            children: this.getSubtitle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return GroupHeading;\n}(React.Component);\n\nGroupHeading.propTypes = {\n  start: PropTypes.string,\n  end: PropTypes.string,\n  dateJump: PropTypes.oneOf(['week', 'month', 'year', 'day'])\n};\nexport default GroupHeading;","map":{"version":3,"sources":["/Users/minmin/Documents/TuongTacMayTinh-Client/src/components/group-heading/index.js"],"names":["React","moment","PropTypes","GroupHeading","startMoment","props","start","currentMoment","yesterdayMoment","subtract","dateJump","isSame","format","formattedDate","fromNow","endMoment","end","getTitle","getSubtitle","Component","propTypes","string","oneOf"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;;IAEMC,Y;;;;;;;;;;;;;WACJ,oBAAW;AACT,UAAMC,WAAW,GAAGH,MAAM,CAAC,KAAKI,KAAL,CAAWC,KAAZ,CAA1B;AACA,UAAMC,aAAa,GAAGN,MAAM,EAA5B;AACA,UAAMO,eAAe,GAAGP,MAAM,GAAGQ,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAAxB,CAHS,CAKT;;AACA,UAAI,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,KAA5B,EAAmC;AACjC,YAAIN,WAAW,CAACO,MAAZ,CAAmBJ,aAAnB,EAAkC,KAAlC,CAAJ,EAA8C;AAC5C,iBAAO,OAAP;AACD,SAFD,MAEO,IAAIH,WAAW,CAACO,MAAZ,CAAmBH,eAAnB,EAAoC,KAApC,CAAJ,EAAgD;AACrD,iBAAO,WAAP;AACD;;AAED,eAAOJ,WAAW,CAACQ,MAAZ,CAAmB,MAAnB,CAAP;AACD,OAdQ,CAgBT;;;AACA,UAAMC,aAAa,GAAGT,WAAW,CAACU,OAAZ,EAAtB;;AACA,UAAID,aAAa,KAAK,YAAtB,EAAoC;AAClC,eAAO,WAAP;AACD,OAFD,MAEO,IAAIA,aAAa,KAAK,YAAtB,EAAoC;AACzC,eAAO,WAAP;AACD,OAFM,MAEA,IAAIA,aAAa,KAAK,aAAtB,EAAqC;AAC1C,eAAO,WAAP;AACD;;AAED,aAAOA,aAAP;AACD;;;WAED,uBAAc;AACZ,UAAMT,WAAW,GAAGH,MAAM,CAAC,KAAKI,KAAL,CAAWC,KAAZ,CAA1B;AACA,UAAMS,SAAS,GAAGd,MAAM,CAAC,KAAKI,KAAL,CAAWW,GAAZ,CAAxB;;AAEA,UAAIZ,WAAW,CAACO,MAAZ,CAAmBI,SAAnB,EAA8B,KAA9B,KAAwC,KAAKV,KAAL,CAAWK,QAAX,KAAwB,KAApE,EAA2E;AACzE,eAAON,WAAW,CAACQ,MAAZ,CAAmB,cAAnB,CAAP;AACD;;AAED,aACER,WAAW,CAACQ,MAAZ,CAAmB,cAAnB,IACA,KADA,GAEAG,SAAS,CAACH,MAAV,CAAiB,cAAjB,CAHF;AAKD;;;WAED,kBAAS;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA,sBAAoC,KAAKK,QAAL;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,uBAAhB;AAAA,sBAAyC,KAAKC,WAAL;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;;;;EAtDwBlB,KAAK,CAACmB,S;;AAyDjChB,YAAY,CAACiB,SAAb,GAAyB;AACvBd,EAAAA,KAAK,EAAEJ,SAAS,CAACmB,MADM;AAEvBL,EAAAA,GAAG,EAAEd,SAAS,CAACmB,MAFQ;AAGvBX,EAAAA,QAAQ,EAAER,SAAS,CAACoB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,KAA1B,CAAhB;AAHa,CAAzB;AAMA,eAAenB,YAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nclass GroupHeading extends React.Component {\n  getTitle() {\n    const startMoment = moment(this.props.start);\n    const currentMoment = moment();\n    const yesterdayMoment = moment().subtract(1, 'day');\n\n    // For \"day\" jumps return the day name\n    if (this.props.dateJump === 'day') {\n      if (startMoment.isSame(currentMoment, 'day')) {\n        return 'Today';\n      } else if (startMoment.isSame(yesterdayMoment, 'day')) {\n        return 'Yesterday';\n      }\n\n      return startMoment.format('dddd');\n    }\n\n    // Return the relative date\n    const formattedDate = startMoment.fromNow();\n    if (formattedDate === 'a year ago') {\n      return 'Last year';\n    } else if (formattedDate === '7 days ago') {\n      return 'This week';\n    } else if (formattedDate === '14 days ago') {\n      return 'Last week';\n    }\n\n    return formattedDate;\n  }\n\n  getSubtitle() {\n    const startMoment = moment(this.props.start);\n    const endMoment = moment(this.props.end);\n\n    if (startMoment.isSame(endMoment, 'day') || this.props.dateJump === 'day') {\n      return startMoment.format('MMMM D, YYYY');\n    }\n\n    return (\n      startMoment.format('MMMM D, YYYY') +\n      ' – ' +\n      endMoment.format('MMMM D, YYYY')\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"group-heading\">\n        <h4>\n          <span className=\"text-capitalizes\">{this.getTitle()}</span>\n          <span className=\"small text-muted ml-2\">{this.getSubtitle()}</span>\n        </h4>\n      </div>\n    );\n  }\n}\n\nGroupHeading.propTypes = {\n  start: PropTypes.string,\n  end: PropTypes.string,\n  dateJump: PropTypes.oneOf(['week', 'month', 'year', 'day']),\n};\n\nexport default GroupHeading;\n"]},"metadata":{},"sourceType":"module"}